{"ast":null,"code":"var _jsxFileName = \"/Users/ale/Documents/Digital House/FE3/fe3-final/src/Components/utils/global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useCallback, useEffect, useMemo, useReducer, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  themes: {\n    light: {\n      font: \"black\",\n      backgroundColor: \"#EEF1FF\",\n      navBackground: \"#D2DAFF\",\n      cardBackground: \"#c2d4ff\"\n    },\n    dark: {\n      font: \"white\",\n      backgroundColor: \"#352F44\",\n      navBackground: \"#5C5470\",\n      cardBackground: \"#5e5a6e\"\n    }\n  },\n  data: []\n};\nexport const ContextGlobal = /*#__PURE__*/createContext(initialState);\nexport const themeReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE_THEME\":\n      if (action.payload === themes.dark) return themes.light;\n      if (action.payload === themes.light) return themes.dark;\n      return state;\n\n    default:\n      return state;\n  }\n};\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    themes,\n    data\n  } = initialState; //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  // const [theme, setTheme] = useState(themes.light);\n\n  const [apiData, setApiData] = useState(data);\n  const [theme, dispatch] = useReducer(themeReducer, themes.light);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://jsonplaceholder.typicode.com/users\").then(data => data.json());\n      setApiData(response);\n    };\n\n    fetchData();\n  }, []); // const handleChangeTheme = useCallback(() => {\n  //   if (theme === themes.dark) setTheme(themes.light);\n  //   if (theme === themes.light) setTheme(themes.dark);\n  // }, [theme, themes.dark, themes.light]);\n\n  const handleChangeTheme = theme => {\n    dispatch({\n      type: \"CHANGE_THEME\",\n      payload: theme\n    });\n  }; // const themeProviderValue = useMemo(\n  //   () => ({ theme, handleChangeTheme }),\n  //   [theme, handleChangeTheme]\n  // );\n\n\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      theme,\n      handleChangeTheme,\n      apiData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"egsK7VPkqQSPbtrL5+JjV1p0Vfg=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useCallback","useEffect","useMemo","useReducer","useState","initialState","themes","light","font","backgroundColor","navBackground","cardBackground","dark","data","ContextGlobal","themeReducer","state","action","type","payload","ContextProvider","children","apiData","setApiData","theme","dispatch","fetchData","response","fetch","then","json","handleChangeTheme"],"sources":["/Users/ale/Documents/Digital House/FE3/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import {\n  createContext,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useState,\n} from \"react\";\n\nexport const initialState = {\n  themes: {\n    light: {\n      font: \"black\",\n      backgroundColor: \"#EEF1FF\",\n      navBackground: \"#D2DAFF\",\n      cardBackground: \"#c2d4ff\",\n    },\n    dark: {\n      font: \"white\",\n      backgroundColor: \"#352F44\",\n      navBackground: \"#5C5470\",\n      cardBackground: \"#5e5a6e\",\n    },\n  },\n  data: [],\n};\n\nexport const ContextGlobal = createContext(initialState);\n\nexport const themeReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE_THEME\":\n      if (action.payload === themes.dark) return themes.light;\n      if (action.payload === themes.light) return themes.dark;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const ContextProvider = ({ children }) => {\n  const { themes, data } = initialState;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  // const [theme, setTheme] = useState(themes.light);\n  const [apiData, setApiData] = useState(data);\n\n  const [theme, dispatch] = useReducer(themeReducer, themes.light);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://jsonplaceholder.typicode.com/users\"\n      ).then((data) => data.json());\n      setApiData(response);\n    };\n    fetchData();\n  }, []);\n\n  // const handleChangeTheme = useCallback(() => {\n  //   if (theme === themes.dark) setTheme(themes.light);\n  //   if (theme === themes.light) setTheme(themes.dark);\n  // }, [theme, themes.dark, themes.light]);\n\n  const handleChangeTheme = (theme) => {\n    dispatch({ type: \"CHANGE_THEME\", payload: theme });\n  };\n\n  // const themeProviderValue = useMemo(\n  //   () => ({ theme, handleChangeTheme }),\n  //   [theme, handleChangeTheme]\n  // );\n\n  return (\n    <ContextGlobal.Provider value={{ theme, handleChangeTheme, apiData }}>\n      {children}\n    </ContextGlobal.Provider>\n  );\n};\n"],"mappings":";;;AAAA,SACEA,aADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,OAJF,EAKEC,UALF,EAMEC,QANF,QAOO,OAPP;;AASA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,MAAM,EAAE;IACNC,KAAK,EAAE;MACLC,IAAI,EAAE,OADD;MAELC,eAAe,EAAE,SAFZ;MAGLC,aAAa,EAAE,SAHV;MAILC,cAAc,EAAE;IAJX,CADD;IAONC,IAAI,EAAE;MACJJ,IAAI,EAAE,OADF;MAEJC,eAAe,EAAE,SAFb;MAGJC,aAAa,EAAE,SAHX;MAIJC,cAAc,EAAE;IAJZ;EAPA,CADkB;EAe1BE,IAAI,EAAE;AAfoB,CAArB;AAkBP,OAAO,MAAMC,aAAa,gBAAGf,aAAa,CAACM,YAAD,CAAnC;AAEP,OAAO,MAAMU,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAC7C,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,cAAL;MACE,IAAID,MAAM,CAACE,OAAP,KAAmBb,MAAM,CAACM,IAA9B,EAAoC,OAAON,MAAM,CAACC,KAAd;MACpC,IAAIU,MAAM,CAACE,OAAP,KAAmBb,MAAM,CAACC,KAA9B,EAAqC,OAAOD,MAAM,CAACM,IAAd;MACrC,OAAOI,KAAP;;IACF;MACE,OAAOA,KAAP;EANJ;AAQD,CATM;AAWP,OAAO,MAAMI,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C,MAAM;IAAEf,MAAF;IAAUO;EAAV,IAAmBR,YAAzB,CAD+C,CAE/C;EACA;;EACA,MAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAACS,IAAD,CAAtC;EAEA,MAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBtB,UAAU,CAACY,YAAD,EAAeT,MAAM,CAACC,KAAtB,CAApC;EAEAN,SAAS,CAAC,MAAM;IACd,MAAMyB,SAAS,GAAG,YAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4CAD0B,CAAL,CAErBC,IAFqB,CAEfhB,IAAD,IAAUA,IAAI,CAACiB,IAAL,EAFM,CAAvB;MAGAP,UAAU,CAACI,QAAD,CAAV;IACD,CALD;;IAMAD,SAAS;EACV,CARQ,EAQN,EARM,CAAT,CAR+C,CAkB/C;EACA;EACA;EACA;;EAEA,MAAMK,iBAAiB,GAAIP,KAAD,IAAW;IACnCC,QAAQ,CAAC;MAAEP,IAAI,EAAE,cAAR;MAAwBC,OAAO,EAAEK;IAAjC,CAAD,CAAR;EACD,CAFD,CAvB+C,CA2B/C;EACA;EACA;EACA;;;EAEA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAAEA,KAAF;MAASO,iBAAT;MAA4BT;IAA5B,CAA/B;IAAA,UACGD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CArCM;;GAAMD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}