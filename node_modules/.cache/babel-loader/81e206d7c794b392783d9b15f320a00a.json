{"ast":null,"code":"var _jsxFileName = \"/Users/ale/Documents/Digital House/FE3/fe3-final/src/Components/utils/global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  themes: {\n    light: {\n      font: \"black\",\n      backgroundColor: \"white\"\n    },\n    dark: {\n      font: \"#FAF0E6\",\n      backgroundColor: \"#352F44\",\n      navBackground: \"#5C5470\",\n      cardBackground: \"#B9B4C7\"\n    }\n  },\n  data: []\n};\nexport const ContextGlobal = /*#__PURE__*/createContext(initialState);\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    themes,\n    data\n  } = initialState; //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n\n  const [theme, setTheme] = useState(themes.light);\n  const [apiData, setApiData] = useState(data);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://jsonplaceholder.typicode.com/users\").then(data => data.json());\n      setApiData(response);\n    };\n\n    fetchData();\n  }, []);\n  const handleChangeTheme = useCallback(() => {\n    if (theme === themes.dark) setTheme(themes.light);\n    if (theme === themes.light) setTheme(themes.dark);\n    console.log(\"first\", theme);\n  }, [theme, themes.dark, themes.light]);\n  const themeProviderValue = useMemo(() => ({\n    theme,\n    handleChangeTheme\n  }), [theme, handleChangeTheme]);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: { ...themeProviderValue,\n      apiData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"fPRMIdtVM5j/3e/Ke6s/RKXUGwk=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useCallback","useEffect","useMemo","useState","initialState","themes","light","font","backgroundColor","dark","navBackground","cardBackground","data","ContextGlobal","ContextProvider","children","theme","setTheme","apiData","setApiData","fetchData","response","fetch","then","json","handleChangeTheme","console","log","themeProviderValue"],"sources":["/Users/ale/Documents/Digital House/FE3/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import {\n  createContext,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\n\nexport const initialState = {\n  themes: {\n    light: {\n      font: \"black\",\n      backgroundColor: \"white\",\n    },\n    dark: {\n      font: \"#FAF0E6\",\n      backgroundColor: \"#352F44\",\n      navBackground: \"#5C5470\",\n      cardBackground: \"#B9B4C7\"\n    },\n  },\n  data: [],\n};\n\nexport const ContextGlobal = createContext(initialState);\n\nexport const ContextProvider = ({ children }) => {\n  const { themes, data } = initialState;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [theme, setTheme] = useState(themes.light);\n  const [apiData, setApiData] = useState(data);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://jsonplaceholder.typicode.com/users\"\n      ).then((data) => data.json());\n      setApiData(response);\n    };\n    fetchData();\n  }, []);\n\n  const handleChangeTheme = useCallback(() => {\n    if (theme === themes.dark) setTheme(themes.light);\n    if (theme === themes.light) setTheme(themes.dark);\n    console.log(\"first\", theme);\n  },[theme, themes.dark, themes.light]);\n\n  const themeProviderValue = useMemo(\n    () => ({ theme, handleChangeTheme }),\n    [theme, handleChangeTheme]\n  );\n\n  return (\n    <ContextGlobal.Provider value={{...themeProviderValue, apiData}}>\n      {children}\n    </ContextGlobal.Provider>\n  );\n};\n"],"mappings":";;;AAAA,SACEA,aADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,OAJF,EAKEC,QALF,QAMO,OANP;;AAQA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,MAAM,EAAE;IACNC,KAAK,EAAE;MACLC,IAAI,EAAE,OADD;MAELC,eAAe,EAAE;IAFZ,CADD;IAKNC,IAAI,EAAE;MACJF,IAAI,EAAE,SADF;MAEJC,eAAe,EAAE,SAFb;MAGJE,aAAa,EAAE,SAHX;MAIJC,cAAc,EAAE;IAJZ;EALA,CADkB;EAa1BC,IAAI,EAAE;AAboB,CAArB;AAgBP,OAAO,MAAMC,aAAa,gBAAGd,aAAa,CAACK,YAAD,CAAnC;AAEP,OAAO,MAAMU,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C,MAAM;IAAEV,MAAF;IAAUO;EAAV,IAAmBR,YAAzB,CAD+C,CAE/C;;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACE,MAAM,CAACC,KAAR,CAAlC;EACA,MAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAACS,IAAD,CAAtC;EAEAX,SAAS,CAAC,MAAM;IACd,MAAMmB,SAAS,GAAG,YAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4CAD0B,CAAL,CAErBC,IAFqB,CAEfX,IAAD,IAAUA,IAAI,CAACY,IAAL,EAFM,CAAvB;MAGAL,UAAU,CAACE,QAAD,CAAV;IACD,CALD;;IAMAD,SAAS;EACV,CARQ,EAQN,EARM,CAAT;EAUA,MAAMK,iBAAiB,GAAGzB,WAAW,CAAC,MAAM;IAC1C,IAAIgB,KAAK,KAAKX,MAAM,CAACI,IAArB,EAA2BQ,QAAQ,CAACZ,MAAM,CAACC,KAAR,CAAR;IAC3B,IAAIU,KAAK,KAAKX,MAAM,CAACC,KAArB,EAA4BW,QAAQ,CAACZ,MAAM,CAACI,IAAR,CAAR;IAC5BiB,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBX,KAArB;EACD,CAJoC,EAInC,CAACA,KAAD,EAAQX,MAAM,CAACI,IAAf,EAAqBJ,MAAM,CAACC,KAA5B,CAJmC,CAArC;EAMA,MAAMsB,kBAAkB,GAAG1B,OAAO,CAChC,OAAO;IAAEc,KAAF;IAASS;EAAT,CAAP,CADgC,EAEhC,CAACT,KAAD,EAAQS,iBAAR,CAFgC,CAAlC;EAKA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE,EAAC,GAAGG,kBAAJ;MAAwBV;IAAxB,CAA/B;IAAA,UACGH;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAhCM;;GAAMD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}